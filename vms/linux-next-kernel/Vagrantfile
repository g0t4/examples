# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|

  config.vm.box = "test-ubuntu2410-arm"

  config.vm.box_check_update = false

  config.vm.provider "parallels" do |prl|
    prl.cpus = 10
    prl.memory = 32768
    prl.linked_clone = false # so I can expand drive size manually, else if a linked clone it seems like there is no way to ever expand drive?!

    # TODO: does disk mgmt work with parallels plugin
    # https://github.com/hashicorp/vagrant/pull/11165

    # steps
    # boot VM for first time to create non linked_clone VM
    # vagrant halt => manually expand drive size in parallels GUI
    # vagrant up
    # vagrant ssh
    #
    # lsblk # confirm drive is larger
    # sda                         8:0    0  170G  0 disk
    # ├─sda1                      8:1    0    1G  0 part /boot/efi
    # ├─sda2                      8:2    0    2G  0 part /boot
    # └─sda3                      8:3    0   36G  0 part
    #   └─ubuntu--vg-ubuntu--lv 252:0    0   18G  0 lvm  /
    # sudo lvdisplay
    #   LV Name                ubuntu-lv
    #   LV Size                18.00 GiB
    #
    # 1. resize partition
    # lsblk # confirm
    # sudo parted /dev/sda resizepart 3 100%
    # # Information: You may need to update /etc/fstab. # from resizepart cmd
    # dmsetup info -C   # get current UUID of LV
    # cat /etc/fstab # confirm if UUID in /etc/fstab still matches (it does == good to go)

    # 2. resize PV (b/c using LVM) (= Physical Volume)
    # pvdisplay # confirm
    # sudo pvresize /dev/sda3

    # 3. resize LV (= Logical Volume)
    # lvdisplay # confirm
    # sudo lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv

    # 4. resize filesystem
    # df -h # confirm
    # sudo resize2fs /dev/ubuntu-vg/ubuntu-lv

    # tools
    # sudo apt install -y bat icdiff tree

    # build kernel
    # sudo apt install -y build-essential libncurses-dev bison flex libssl-dev libelf-dev
    # # tag: https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git/tag/?h=next-20240830
    #       (as of 2024-08-31 => IIUC linux-next is 6.12, cuz 6.11 is in RCs)
    #   wget https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git/snapshot/linux-next-next-20240830.tar.gz
    # tar xf linux-next-next-20240830.tar.gz -C ~/
    # make menuconfig
    #   Set DRM_PANIC and DRM_PANIC_DEBUG # try to get these to work (new in 6.10)
    #     *** TODO can I just mod the .config myself to save time and make it reproducible or does it add any depenencies too?
    #     LATER see my notes in linux-next clone for other options to try
    #
    #     FYIk, b/c based on debian config in current VM, need to disable some certs in the .config file:
    #        CONFIG_SYSTEM_TRUSTED_KEYS=""
    #        CONFIG_SYSTEM_REVOCATION_KEYS=""
    #        # untested (look ok)
    #           sed -i 's/^CONFIG_SYSTEM_TRUSTED_KEYS=.*/CONFIG_SYSTEM_TRUSTED_KEYS=""/' .config
    #           sed -i 's/^CONFIG_SYSTEM_REVOCATION_KEYS=.*/CONFIG_SYSTEM_REVOCATION_KEYS=""/' .config
    #
    # make -j$(nproc) # worked!
    #
    # sudo make modules_install
    #
    # sudo make install
    # # FAILS: # ERROR (dkms apport): binary package for parallels-tools: 19.4.0.54962 not found
    #     trying to recompile the kernel module parallel-tools and its not working?
    # dkms status
    #   parallels-tools/19.4.0.54962, 6.8.0-31-generic, aarch64: installed
    # found files:
    #   cat /usr/src/parallels-tools-19.4.0.54962/dkms.conf
    #   ALSO    ls /var/lib/dkms/parallels-tools
    # so is it just not finding the compiled version or? can I skip it?
    # DERP wes the error mentioned:
    #   cat /var/lib/dkms/parallels-tools/19.4.0.54962/build/make.log
    #     ERROR in file during compile... hence why it cannot find the binary!:
    #      /var/lib/dkms/parallels-tools/19.4.0.54962/build/prl_fs/SharedFolders/Guest/Linux/prl_fs/inode.c:874:17: error: implicit declaration of function ‘SetPageError’; did you mean ‘SetPageDirty’? [-Wimplicit-function-declaration]
    #      874 |                 SetPageError(page);
    #   OK IT FAILED TO recompile dkms... can I just skip it?
    #
    # *** try w/o this module, and for now I am removing it from all KERNELS in dkms
    #     sudo dkms remove -m parallels-tools -v 19.4.0.54962 --all
    #     sudo dkms status # confirm nothing now
    #  *** make install # WORKED!
    # ls /boot
    #      vmlinux-6.11.0-rc5-next-20240830    # ok so its marked rc5-next ==? 6.12
    #         it has the flags I want for DRM_PANIC so i'm fine with it so far, must be 6.12 and not marked that way yet? not gonna be a 6.11 rc6 prep right? I don't think that has its own git tree?!
    #
    # upon inspection grub has new menuentry for kernel
    #   sudo cat /boot/grub/grub.cfg
    # SO, set grub to wait 10 seconds so I can select it one off:
    #   sudo sed -i 's/^GRUB_TIMEOUT=.*/GRUB_TIMEOUT=10/' /etc/default/grub
    #   sudo update-grub
    # OPEN PARALLELS GUI to current machine
    #   sudo reboot # OR better yet send reboot from parallels GUI and make sure the window (GUI) is focused so keys work
    #   once it reboots, hit ESC (one time) and grub will show shortly after, pick new kernel... if it works can update grub to use it by default!!!
    #
    # uname -a # verify kernel :)
    #
    # OF COURSE I SHOULD'VE verified if parallels can integrate with DRM... and IIUC no it doesn't so I can't ever see this panic screen? and no QR codes (le sigh)
    #
    # FYI testing a panic:
    # https://www.phoronix.com/news/Nouveau-DRM-Panic-Patches
    #     echo c | sudo tee /proc/sysrq-trigger  # locks up of course in parallels and nothing else

    # FYI testing panic in qemu+virsh:
    #   ssh'd in and ran `echo c | sudo tee /proc/sysrq-trigger'
    #     via `virsh console u2410` I got the dump of linux Kernel panic in the console logs
    #     obviously, nothing via vnc/ssh b/c the kernel is dead
    #   supposedly `echo 1 > /sys/kernel/debug/dri/0/drm_panic_plane_0` should work b/c of DRM_PANIC_DEBUG kernel option
    #     sudo ls /sys/kernel/debug/dri/0  # this time I actually see /0 whereas it was always /1 before
    #

    # digging into SimpleDRM (one of the drivers that supports this new blue screen DRM_PANIC)
    #     CONFIG_DRM_SIMPLEDRM=y   # confirm is enabled in kernel options for my new compiled kernel
    #     sudo dmesg | grep drm # on qemu+virsh => shows bochs-drm
    #       # my desktop tower (w/ ubuntu 24.04) starts w/ simpledrm
    #          => then switches to noveau drm later (nvidia gpu)
    #
    #   sudo apt install -y drm-info
    #
    # forcing virsh+qemu to use simpledrm:
    #
    #    qemu-system-aarch64 --device help  # look at diplay devices and try them out and see if any use simpledrm?
    #       <model type='virtio' vram='32768' /> # fb0: virtio_gpudrmfb frame buffer device
    #       <model type='vga' vram='16384' heads='1' primary='yes'/>  # bochs-drm fb
    #       ati-vga # fails on virsh define
    #       ramfb   # *** OMG simpledrm and `ls /sys/kernel/debug/dri/0` shows drm_panic_plane_0!!!
    #             VNC in!!!!!! (virsh console - does not show it b/c its VT Console)
    #                 FUCK YES IT SHOWS THE KERNEL PANIC SCREEN!!!
    #           FYI I DID NOT NEED to modify cmd line:  GRUB_CMDLINE_LINUX="video=simpledrm" ... ramfb is using simpledrm by default
    #              FYI dmesg shows:     [    0.512943] simple-framebuffer simple-framebuffer.0: [drm] Registered 1 planes with drm panic
    #                  another way to confirm sipmledrm + panic screen is gonna work


    # build13 rebooted into new kernel!
    #   forcing it to use simpledrm
    #   sudo vim /etc/default/grub
    #     GRUB_CMDLINE_LINUX="video=simpledrm modprobe.blacklist=nouveau"
    #        # video=simpledrm alone didn't do it so i blacklisted nouveau...
    #           # ??? might mean I don't need video=simpledrm (b/c simpledrm already used before nouveau is loaded)
    #     sudo update-grub
    #     sudo reboot
    #     sudo dmesg | grep drm # shows simpledrm initialized (good deal)
    #     sudo drm_info # shows simpledrm used!
    #     tree /dev/dri/
    # /dev/dri/
    # ├── by-path
    # │   └── pci-0000:03:00.0-platform-simple-framebuffer.0-card -> ../card0
    # └── card0
    # lspci shows 03:00 is nvidia gpu
    #
    # sudo su
    #    ls /sys/kernel/debug/dri/0   # finally!!! shows drm_panic_plane_0 # may work!
    #   echo 1 > /sys/kernel/debug/dri/0/drm_panic_plane_0   # WORKED!!!
    #   echo 0 > /sys/kernel/debug/dri/0/drm_panic_plane_0   # can reset it and use system (not a real panic,  just seems to draw to the screen as if it were real... )
    #
    #   echo c > /proc/sysrq-trigger  # real panic, shows diff reason on panic screen! (obvi not recoverable)
    #

    # OTHER NOTES (from linux-next clone)
    #
    ## *** FYI articles about new DRM PANIC SCREEN
    # https://www.phoronix.com/news/Linux-6.10-DRM-Panic-Handler
    # https://www.phoronix.com/news/Linux-DRM-Panic-QR-Codes
    # https://www.phoronix.com/news/Linux-6.12-DRM-Panic-QR-Code
    #
    ##

    # COMPILING failure early on certs:
    # failure1:
    #   make[3]: *** No rule to make target 'debian/canonical-certs.pem', needed by 'certs/x509_certificate_list'.  Stop.
    #   *** OK FOUND FIX:
    #     CONFIG_SYSTEM_TRUSTED_KEYS = ""
    #     https://wiki.debian.org/BuildADebianKernelPackage
    #     when you use the stock /boot/config-$(uname -r) file, you need to mod this line to blank (above)
    #       SOF post also talking about this: https://stackoverflow.com/questions/67670169/compiling-kernel-gives-error-no-rule-to-make-target-debian-certs-debian-uefi-ce
    #
    #  │ Symbol: SYSTEM_TRUSTED_KEYS [=debian/canonical-certs.pem]                                                                    │
    #  │ Type  : string                                                                                                               │
    #  │ Defined at certs/Kconfig:58                                                                                                  │
    #  │   Prompt: Additional X.509 keys for default system keyring                                                                   │
    #  │   Depends on: CRYPTO [=y] && SYSTEM_TRUSTED_KEYRING [=y]                                                                     │
    #  │   Location:                                                                                                                  │
    #  │     -> Cryptographic API (CRYPTO [=y])                                                                                       │
    #  │       -> Certificates for signature checking                                                                                 │
    #  │         -> Provide system-wide ring of trusted keys (SYSTEM_TRUSTED_KEYRING [=y])                                            │
    #  │ (2)       -> Additional X.509 keys for default system keyring (SYSTEM_TRUSTED_KEYS [=debian/canonical-certs.pem])            │
    #

    # *** pay attention to "Depends on:" => QR_CODE requires RUST
    # /panic =>
    #
    # *** I SET THESE in menuconfig on first pass:
    #   DRM_PANIC
    #   DRM_PANIC_DEBUG
    #      Prompt: Add a debug fs entry to trigger drm_panic
    #
    # *** later for fun:
    #   DRM_PANIC_BACKGROUND_COLOR
    #   DRM_PANIC_FOREGROUND_COLOR
    #   DRM_PANIC_SCREEN # formatter?
    #
    #
    # *** DRM_PANIC_SCREEN_QR_CODE   # enable QR code based panic screen!
    #         Depends on: HAS_IOMEM [=y] && DRM [=y] && DRM_PANIC [=y] && RUST [=n]
    #     DRM_PANIC_SCREEN_QR_CODE_URL   # base url
    #     DRM_PANIC_SCREEN_QR_VERSION # smth about size of QR code

    # reference full meta for DRM_PANIC so I can locate it in the menuconfig:
    # │ Symbol: DRM_PANIC [=n]
    # │ Type  : bool
    # │ Defined at drivers/gpu/drm/Kconfig:108
    # │   Prompt: Display a user-friendly message when a kernel panic occurs
    # │   Depends on: HAS_IOMEM [=y] && DRM [=y]
    # │   Location:
    # │     -> Device Drivers
    # │       -> Graphics support
    # │         -> Direct Rendering Manager (XFree86 4.1.0 and higher DRI support) (DRM [=y])
    # │ (4)       -> Display a user-friendly message when a kernel panic occurs (DRM_PANIC [=n])
    # │ Selects: FONT_SUPPORT [=y]

    # TODO Next step... try a diff hypervisor and/or my desktop dual boot
    #

    # - linux-next found: https://www.kernel.org/
    #   => git.kernel.org
    #   => https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git/
    #   => cloned this git tree (repo) and found qrcode in the code that was close to article's patch code
    #   https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git/tag/?h=next-20240830

  end

end
